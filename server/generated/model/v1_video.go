// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1Video 動画を表すオブジェクトです
//
// swagger:model v1Video
type V1Video struct {

	// 動画の説明です
	Description string `json:"description,omitempty"`

	// 動画の ID です
	ID string `json:"id,omitempty"`

	// 動画のタイトルです
	Name string `json:"name,omitempty"`

	// 動画の公開日時です
	// Format: date-time
	PublishedAt strfmt.DateTime `json:"publishedAt,omitempty"`

	// 動画の YouTube 上での ID です
	YoutubeID string `json:"youtubeId,omitempty"`
}

// Validate validates this v1 video
func (m *V1Video) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePublishedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1Video) validatePublishedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.PublishedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("publishedAt", "body", "date-time", m.PublishedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1Video) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Video) UnmarshalBinary(b []byte) error {
	var res V1Video
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
